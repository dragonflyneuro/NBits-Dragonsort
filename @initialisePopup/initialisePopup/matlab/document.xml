<?xml version="1.0" encoding="UTF-8" standalone="no" ?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[classdef initialisePopup < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        SortinginitialiserUIFigure    matlab.ui.Figure
        InitialiseButton              matlab.ui.control.Button
        TabGroup                      matlab.ui.container.TabGroup
        LoadingTab                    matlab.ui.container.Tab
        GridLayout2                   matlab.ui.container.GridLayout
        Label_7                       matlab.ui.control.Label
        ScaleEditField                matlab.ui.control.NumericEditField
        MultiplieronyscaleyaxisisinuVLabel  matlab.ui.control.Label
        SuffixEditField               matlab.ui.control.EditField
        SuffixtoputonsaveddataEditFieldLabel  matlab.ui.control.Label
        ThesevaluescannotbechangedoncesetLabel  matlab.ui.control.Label
        Label_6                       matlab.ui.control.Label
        Label_3                       matlab.ui.control.Label
        Label_2                       matlab.ui.control.Label
        Label                         matlab.ui.control.Label
        echEditField                  matlab.ui.control.EditField
        EphyschannelsarrayformatEditFieldLabel  matlab.ui.control.Label
        FileLabel                     matlab.ui.control.Label
        ChoosebinButton               matlab.ui.control.Button
        DuplexdataCheckBox            matlab.ui.control.CheckBox
        SamplingrateHzEditField       matlab.ui.control.NumericEditField
        SamplingrateHzEditFieldLabel  matlab.ui.control.Label
        nchEditField                  matlab.ui.control.NumericEditField
        ofchannelsEditFieldLabel      matlab.ui.control.Label
        BytespersampleEditField       matlab.ui.control.NumericEditField
        BytespersampleEditFieldLabel  matlab.ui.control.Label
        SpikedetectionTab             matlab.ui.container.Tab
        GridLayout2_2                 matlab.ui.container.GridLayout
        SpikewidthEditField           matlab.ui.control.NumericEditField
        SpikewidtheithersideofpeakmsLabel  matlab.ui.control.Label
        Ampthreshold1EditField        matlab.ui.control.NumericEditField
        SpikeamplituderangeuVLabel    matlab.ui.control.Label
        MainchannelnumberSpinner      matlab.ui.control.Spinner
        MainchanelnumberSpinnerLabel  matlab.ui.control.Label
        AddtotemplateEditField        matlab.ui.control.NumericEditField
        AddtotemplatethresholdhigherlenientEditFieldLabel  matlab.ui.control.Label
        NewtemplateEditField          matlab.ui.control.NumericEditField
        NewtemplatethresholdhigherlenientEditFieldLabel  matlab.ui.control.Label
        SplitlengthEditField          matlab.ui.control.NumericEditField
        LengthofloadeddatablocksamplesEditFieldLabel  matlab.ui.control.Label
        Ampthreshold2EditField        matlab.ui.control.NumericEditField
        FilteringTab                  matlab.ui.container.Tab
        GridLayout                    matlab.ui.container.GridLayout
        NoneButton                    matlab.ui.control.StateButton
        PlotButton                    matlab.ui.control.Button
        LowpassButton                 matlab.ui.control.StateButton
        SetButton                     matlab.ui.control.Button
        Cutoffs2EditField             matlab.ui.control.NumericEditField
        Cutoffs1EditField             matlab.ui.control.NumericEditField
        CutoffsHzEditFieldLabel_2     matlab.ui.control.Label
        FirstbandCheckBox             matlab.ui.control.CheckBox
        HelpLabel                     matlab.ui.control.Label
        CustomLabel                   matlab.ui.control.Label
        CutoffsEditField              matlab.ui.control.EditField
        CutoffsHzEditFieldLabel       matlab.ui.control.Label
        NotchButton                   matlab.ui.control.StateButton
        BandpassButton                matlab.ui.control.StateButton
        HighpassButton                matlab.ui.control.StateButton
        PresetsLabel                  matlab.ui.control.Label
        FilterLengthEditField         matlab.ui.control.NumericEditField
        FilterorderLabel              matlab.ui.control.Label
        UIAxes                        matlab.ui.control.UIAxes
    end

    
    properties (Access = private)
        CallingApp % Description
        initm
        initt
        toggles
        snippet = [];
    end
    
    methods (Access = private)
        function [] = updateFig(app)
            if ~app.InitialiseButton.Enable
                return;
            end
            
            if isempty(app.snippet)
                fid = fopen([app.initm.fP app.initm.fN],'r');
                if fid > 0
                    app.snippet = fread(fid,[app.nchEditField.Value,1e5],"int16",'l');
                    app.snippet = app.snippet(round(app.MainchannelnumberSpinner.Value),:);
                    fclose(fid);
                else
                    return;
                end
            end
            
            temp = app.snippet;
            if ~isempty(eval(app.CutoffsEditField.Value))
                if app.DuplexdataCheckBox.Value
                    r = app.SamplingrateHzEditField.Value;
                else
                    r = app.SamplingrateHzEditField.Value/2;
                end
    
                if ~app.FirstbandCheckBox.Value
                    f = fir1(app.FilterLengthEditField.Value,...
                        eval(app.CutoffsEditField.Value)./r,'DC-0');
                else
                    f = fir1(app.FilterLengthEditField.Value,...
                        eval(app.CutoffsEditField.Value)./r,'DC-1');
                end
                
                temp = splitconv(app.snippet,f);
                yOffset = prctile(temp,50,2); %yoffset = mean(xi,2);
                temp = temp - yOffset(1,:); % remove DC offset
            end
            
            plot(app.UIAxes,1:length(temp),temp);
        end
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app, mainapp, varargin)
            app.CallingApp = mainapp;
            app.InitialiseButton.Enable = 'off';
            
            app.toggles = uiToggleGroup([app.NoneButton,app.LowpassButton,app.HighpassButton,app.BandpassButton,app.NotchButton],1:5,4);
            
            xlabel(app.UIAxes,[]);
            ylabel(app.UIAxes,[]);
            
            if nargin > 3
                tempT = varargin{2};
                
                app.AddtotemplateEditField.Value = tempT.add2UnitThr(1);
                app.NewtemplateEditField.Value = tempT.add2UnitThr(2);
                app.SuffixEditField.Value = tempT.saveNameSuffix;
                app.ScaleEditField.Value = tempT.yscale;
                app.SplitlengthEditField.Value = tempT.batchSize;
                app.Ampthreshold1EditField.Value = tempT.detectThr(1);
                app.Ampthreshold2EditField.Value = tempT.detectThr(2);
            end

            if nargin > 2
                tempM = varargin{1};
                app.BytespersampleEditField.Value = tempM.dbytes;
                app.nchEditField.Value = tempM.nChans;
                app.echEditField.Value = parseToArray(num2str(tempM.ech));
                app.MainchannelnumberSpinner.Value = tempM.mainCh;
                app.SamplingrateHzEditField.Value = tempM.sRateHz;
                app.FilterLengthEditField.Value = tempM.filterSpec.order;
                app.CutoffsEditField.Value = parseToArray(num2str(tempM.filterSpec.cutoffs));
                if all(tempM.filterSpec.firstBandMode == 'pass')
                    app.FirstbandCheckBox.Value = 1;
                elseif all(tempM.filterSpec.firstBandMode == 'stop')
                    app.FirstbandCheckBox.Value = 0;
                end
                app.DuplexdataCheckBox.Value = 0;
                app.SamplingrateHzEditField.Value = tempM.sRateHz;
                app.SpikewidthEditField.Value = tempM.spikeWidth*1000/tempM.sRateHz;
            end
            
        end

        % Button pushed function: ChoosebinButton
        function ChoosebinButtonPushed(app, event)
            [fN, fP] = uigetfile([app.CallingApp.loadPath '*.bin'],'Pick *.bin file to load');
            if fN ~= 0
                fid = fopen([fP fN],'r');
                
                if fid > 0
                    fseek(fid,0,'eof');
                    app.initm.fileSizeBytes = ftell(fid);
                    fclose(fid);
                    
                    app.FileLabel.Text = fN;
                    app.FileLabel.FontColor = [0 0 0];
                    app.InitialiseButton.Enable = 'on';
                    app.snippet = [];
                    app.initm.fN = fN;
                    app.initm.fP = fP;
                else
                    fclose(fid);
                    app.FileLabel.Text = "Could not open file!";
                    app.FileLabel.FontColor = [255 0 0];
                end
            end
            app.SortinginitialiserUIFigure.Visible = 'off';
            app.SortinginitialiserUIFigure.Visible = 'on';
            
            
        end

        % Close request function: SortinginitialiserUIFigure
        function SortinginitialiserUIFigureCloseRequest(app, event)
            switchButtons(app.CallingApp,1);
            
            % Delete the dialog box
            delete(app)
            
        end

        % Button pushed function: InitialiseButton
        function OKButtonPushed(app, event)
            switchButtons(app.CallingApp,0);
            
            app.CallingApp.loadPath = app.initm.fP;
            app.CallingApp.savePath = app.initm.fP;
                    
            app.initm.dbytes = app.BytespersampleEditField.Value;
            app.initm.nChans = app.nchEditField.Value;
            if ~isempty(app.echEditField.Value)
                app.initm.ech = eval(app.echEditField.Value);
                if iscolumn(app.initm.ech)
                    app.initm.ech = app.initm.ech';
                end
            else
                app.initm.ech = [];
            end
            app.initm.mainCh = find(app.initm.ech == round(app.MainchannelnumberSpinner.Value));
            app.initm.sRateHz = app.SamplingrateHzEditField.Value;
            app.initm.filterSpec.order = app.FilterLengthEditField.Value;
            app.initm.filterSpec.cutoffs = eval(app.CutoffsEditField.Value);
            if app.FirstbandCheckBox.Value == 1
                app.initm.filterSpec.firstBandMode = 'pass';
            else
                app.initm.filterSpec.firstBandMode = 'stop';
            end
            
            if app.DuplexdataCheckBox.Value
                app.initm.sRateHz = 2*app.SamplingrateHzEditField.Value;
            else
                app.initm.sRateHz = app.SamplingrateHzEditField.Value;
            end
            app.initm.spikeWidth = round(app.SpikewidthEditField.Value*app.initm.sRateHz/1000);
            
            app.initt.add2UnitThr(1) = app.AddtotemplateEditField.Value;
            app.initt.add2UnitThr(2) = app.NewtemplateEditField.Value;
            app.initt.saveNameSuffix = app.SuffixEditField.Value;
            app.initt.yscale = app.ScaleEditField.Value;
            app.initt.batchSize = app.SplitlengthEditField.Value;
            app.initt.detectThr = [app.Ampthreshold1EditField.Value app.Ampthreshold2EditField.Value];
            
            updateVars2(app.CallingApp, app.initm, app.initt, []);
            switchButtons(app.CallingApp,1);
            
            delete(app)
            
        end

        % Value changed function: nchEditField
        function nchEditFieldValueChanged(app, event)
            value = app.nchEditField.Value;
            app.MainchannelnumberSpinner.Limits = [1 value+0.1];
            
        end

        % Value changed function: echEditField
        function cleanArray(app, event)
            event.Source.Value = parseToArray(event.Source.Value);
            
        end

        % Button pushed function: SetButton
        function SetButtonPushed(app, event)
            ud = getUserData(app.toggles);
            if ud == 2
                app.CutoffsEditField.Value = parseToArray(string(app.Cutoffs1EditField.Value));
                app.FirstbandCheckBox.Value = 1;
            elseif ud == 3
                app.CutoffsEditField.Value = parseToArray(string(app.Cutoffs1EditField.Value));
                app.FirstbandCheckBox.Value = 0;
            elseif ud == 4
                app.CutoffsEditField.Value = parseToArray(string(app.Cutoffs1EditField.Value)+","+string(app.Cutoffs2EditField.Value));
                app.FirstbandCheckBox.Value = 0;
            elseif ud == 5
                app.CutoffsEditField.Value = parseToArray(string(app.Cutoffs1EditField.Value)+","+string(app.Cutoffs2EditField.Value));
                app.FirstbandCheckBox.Value = 1;
            else
                app.CutoffsEditField.Value = parseToArray("");
            end
            
        end

        % Value changed function: CutoffsEditField
        function CutoffsEditFieldValueChanged(app, event)
            event.Source.Value = parseToArray(event.Source.Value);        
            
        end

        % Button pushed function: PlotButton
        function PlotButtonPushed(app, event)
            updateFig(app)
            
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create SortinginitialiserUIFigure and hide until all components are created
            app.SortinginitialiserUIFigure = uifigure('Visible', 'off');
            app.SortinginitialiserUIFigure.Position = [100 100 554 484];
            app.SortinginitialiserUIFigure.Name = 'Sorting initialiser';
            app.SortinginitialiserUIFigure.CloseRequestFcn = createCallbackFcn(app, @SortinginitialiserUIFigureCloseRequest, true);

            % Create TabGroup
            app.TabGroup = uitabgroup(app.SortinginitialiserUIFigure);
            app.TabGroup.Position = [1 59 554 426];

            % Create LoadingTab
            app.LoadingTab = uitab(app.TabGroup);
            app.LoadingTab.Title = 'Loading';

            % Create GridLayout2
            app.GridLayout2 = uigridlayout(app.LoadingTab);
            app.GridLayout2.ColumnWidth = {'0.1x', '1x', '0.5x', '0.5x', '0.5x', '0.1x'};
            app.GridLayout2.RowHeight = {'1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x'};
            app.GridLayout2.ColumnSpacing = 2;
            app.GridLayout2.RowSpacing = 2;

            % Create BytespersampleEditFieldLabel
            app.BytespersampleEditFieldLabel = uilabel(app.GridLayout2);
            app.BytespersampleEditFieldLabel.HorizontalAlignment = 'right';
            app.BytespersampleEditFieldLabel.Layout.Row = 4;
            app.BytespersampleEditFieldLabel.Layout.Column = [2 3];
            app.BytespersampleEditFieldLabel.Text = 'Bytes per sample';

            % Create BytespersampleEditField
            app.BytespersampleEditField = uieditfield(app.GridLayout2, 'numeric');
            app.BytespersampleEditField.Layout.Row = 4;
            app.BytespersampleEditField.Layout.Column = 4;
            app.BytespersampleEditField.Value = 2;

            % Create ofchannelsEditFieldLabel
            app.ofchannelsEditFieldLabel = uilabel(app.GridLayout2);
            app.ofchannelsEditFieldLabel.HorizontalAlignment = 'right';
            app.ofchannelsEditFieldLabel.Layout.Row = 5;
            app.ofchannelsEditFieldLabel.Layout.Column = [2 3];
            app.ofchannelsEditFieldLabel.Text = '# of channels';

            % Create nchEditField
            app.nchEditField = uieditfield(app.GridLayout2, 'numeric');
            app.nchEditField.ValueChangedFcn = createCallbackFcn(app, @nchEditFieldValueChanged, true);
            app.nchEditField.Layout.Row = 5;
            app.nchEditField.Layout.Column = 4;
            app.nchEditField.Value = 1;

            % Create SamplingrateHzEditFieldLabel
            app.SamplingrateHzEditFieldLabel = uilabel(app.GridLayout2);
            app.SamplingrateHzEditFieldLabel.HorizontalAlignment = 'right';
            app.SamplingrateHzEditFieldLabel.Layout.Row = 7;
            app.SamplingrateHzEditFieldLabel.Layout.Column = [2 3];
            app.SamplingrateHzEditFieldLabel.Text = 'Sampling rate (Hz)';

            % Create SamplingrateHzEditField
            app.SamplingrateHzEditField = uieditfield(app.GridLayout2, 'numeric');
            app.SamplingrateHzEditField.Layout.Row = 7;
            app.SamplingrateHzEditField.Layout.Column = 4;
            app.SamplingrateHzEditField.Value = 30000;

            % Create DuplexdataCheckBox
            app.DuplexdataCheckBox = uicheckbox(app.GridLayout2);
            app.DuplexdataCheckBox.Text = 'Duplex data?';
            app.DuplexdataCheckBox.Layout.Row = 7;
            app.DuplexdataCheckBox.Layout.Column = 5;
            app.DuplexdataCheckBox.Value = true;

            % Create ChoosebinButton
            app.ChoosebinButton = uibutton(app.GridLayout2, 'push');
            app.ChoosebinButton.ButtonPushedFcn = createCallbackFcn(app, @ChoosebinButtonPushed, true);
            app.ChoosebinButton.Layout.Row = 2;
            app.ChoosebinButton.Layout.Column = 4;
            app.ChoosebinButton.Text = 'Choose .bin';

            % Create FileLabel
            app.FileLabel = uilabel(app.GridLayout2);
            app.FileLabel.HorizontalAlignment = 'right';
            app.FileLabel.Layout.Row = 2;
            app.FileLabel.Layout.Column = [2 3];
            app.FileLabel.Text = 'None';

            % Create EphyschannelsarrayformatEditFieldLabel
            app.EphyschannelsarrayformatEditFieldLabel = uilabel(app.GridLayout2);
            app.EphyschannelsarrayformatEditFieldLabel.HorizontalAlignment = 'right';
            app.EphyschannelsarrayformatEditFieldLabel.Layout.Row = 6;
            app.EphyschannelsarrayformatEditFieldLabel.Layout.Column = [2 3];
            app.EphyschannelsarrayformatEditFieldLabel.Text = 'Ephys channels (array format)';

            % Create echEditField
            app.echEditField = uieditfield(app.GridLayout2, 'text');
            app.echEditField.ValueChangedFcn = createCallbackFcn(app, @cleanArray, true);
            app.echEditField.Layout.Row = 6;
            app.echEditField.Layout.Column = 4;
            app.echEditField.Value = '[1]';

            % Create Label
            app.Label = uilabel(app.GridLayout2);
            app.Label.HorizontalAlignment = 'center';
            app.Label.Layout.Row = 4;
            app.Label.Layout.Column = 1;
            app.Label.Text = '*';

            % Create Label_2
            app.Label_2 = uilabel(app.GridLayout2);
            app.Label_2.HorizontalAlignment = 'center';
            app.Label_2.Layout.Row = 5;
            app.Label_2.Layout.Column = 1;
            app.Label_2.Text = '*';

            % Create Label_3
            app.Label_3 = uilabel(app.GridLayout2);
            app.Label_3.HorizontalAlignment = 'center';
            app.Label_3.Layout.Row = 6;
            app.Label_3.Layout.Column = 1;
            app.Label_3.Text = '*';

            % Create Label_6
            app.Label_6 = uilabel(app.GridLayout2);
            app.Label_6.HorizontalAlignment = 'center';
            app.Label_6.Layout.Row = 7;
            app.Label_6.Layout.Column = 1;
            app.Label_6.Text = '*';

            % Create ThesevaluescannotbechangedoncesetLabel
            app.ThesevaluescannotbechangedoncesetLabel = uilabel(app.GridLayout2);
            app.ThesevaluescannotbechangedoncesetLabel.Layout.Row = 1;
            app.ThesevaluescannotbechangedoncesetLabel.Layout.Column = [2 3];
            app.ThesevaluescannotbechangedoncesetLabel.Text = 'These values cannot be changed once set!';

            % Create SuffixtoputonsaveddataEditFieldLabel
            app.SuffixtoputonsaveddataEditFieldLabel = uilabel(app.GridLayout2);
            app.SuffixtoputonsaveddataEditFieldLabel.HorizontalAlignment = 'right';
            app.SuffixtoputonsaveddataEditFieldLabel.Layout.Row = 9;
            app.SuffixtoputonsaveddataEditFieldLabel.Layout.Column = [2 3];
            app.SuffixtoputonsaveddataEditFieldLabel.Text = 'Suffix to put on saved data';

            % Create SuffixEditField
            app.SuffixEditField = uieditfield(app.GridLayout2, 'text');
            app.SuffixEditField.Layout.Row = 9;
            app.SuffixEditField.Layout.Column = [4 5];

            % Create MultiplieronyscaleyaxisisinuVLabel
            app.MultiplieronyscaleyaxisisinuVLabel = uilabel(app.GridLayout2);
            app.MultiplieronyscaleyaxisisinuVLabel.HorizontalAlignment = 'right';
            app.MultiplieronyscaleyaxisisinuVLabel.Layout.Row = 10;
            app.MultiplieronyscaleyaxisisinuVLabel.Layout.Column = [2 3];
            app.MultiplieronyscaleyaxisisinuVLabel.Text = 'Multiplier on y-scale (y-axis is in uV)';

            % Create ScaleEditField
            app.ScaleEditField = uieditfield(app.GridLayout2, 'numeric');
            app.ScaleEditField.Layout.Row = 10;
            app.ScaleEditField.Layout.Column = 4;
            app.ScaleEditField.Value = 1;

            % Create Label_7
            app.Label_7 = uilabel(app.GridLayout2);
            app.Label_7.HorizontalAlignment = 'center';
            app.Label_7.Layout.Row = 1;
            app.Label_7.Layout.Column = 1;
            app.Label_7.Text = '*';

            % Create SpikedetectionTab
            app.SpikedetectionTab = uitab(app.TabGroup);
            app.SpikedetectionTab.Title = 'Spike detection';

            % Create GridLayout2_2
            app.GridLayout2_2 = uigridlayout(app.SpikedetectionTab);
            app.GridLayout2_2.ColumnWidth = {'0.1x', '1x', '0.5x', '0.5x', '0.5x', '0.1x'};
            app.GridLayout2_2.RowHeight = {'1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x'};
            app.GridLayout2_2.ColumnSpacing = 2;
            app.GridLayout2_2.RowSpacing = 2;

            % Create Ampthreshold2EditField
            app.Ampthreshold2EditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.Ampthreshold2EditField.Layout.Row = 3;
            app.Ampthreshold2EditField.Layout.Column = 4;
            app.Ampthreshold2EditField.Value = -80;

            % Create LengthofloadeddatablocksamplesEditFieldLabel
            app.LengthofloadeddatablocksamplesEditFieldLabel = uilabel(app.GridLayout2_2);
            app.LengthofloadeddatablocksamplesEditFieldLabel.HorizontalAlignment = 'right';
            app.LengthofloadeddatablocksamplesEditFieldLabel.Layout.Row = 8;
            app.LengthofloadeddatablocksamplesEditFieldLabel.Layout.Column = [2 3];
            app.LengthofloadeddatablocksamplesEditFieldLabel.Text = 'Length of each batch (samples)';

            % Create SplitlengthEditField
            app.SplitlengthEditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.SplitlengthEditField.Layout.Row = 8;
            app.SplitlengthEditField.Layout.Column = 4;
            app.SplitlengthEditField.Value = 12000000;

            % Create NewtemplatethresholdhigherlenientEditFieldLabel
            app.NewtemplatethresholdhigherlenientEditFieldLabel = uilabel(app.GridLayout2_2);
            app.NewtemplatethresholdhigherlenientEditFieldLabel.HorizontalAlignment = 'right';
            app.NewtemplatethresholdhigherlenientEditFieldLabel.Layout.Row = 7;
            app.NewtemplatethresholdhigherlenientEditFieldLabel.Layout.Column = [2 3];
            app.NewtemplatethresholdhigherlenientEditFieldLabel.Text = 'New template threshold (higher = lenient)';

            % Create NewtemplateEditField
            app.NewtemplateEditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.NewtemplateEditField.Layout.Row = 7;
            app.NewtemplateEditField.Layout.Column = 4;
            app.NewtemplateEditField.Value = 0.7;

            % Create AddtotemplatethresholdhigherlenientEditFieldLabel
            app.AddtotemplatethresholdhigherlenientEditFieldLabel = uilabel(app.GridLayout2_2);
            app.AddtotemplatethresholdhigherlenientEditFieldLabel.HorizontalAlignment = 'right';
            app.AddtotemplatethresholdhigherlenientEditFieldLabel.Layout.Row = 6;
            app.AddtotemplatethresholdhigherlenientEditFieldLabel.Layout.Column = [2 3];
            app.AddtotemplatethresholdhigherlenientEditFieldLabel.Text = 'Add to template threshold (higher = lenient)';

            % Create AddtotemplateEditField
            app.AddtotemplateEditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.AddtotemplateEditField.Layout.Row = 6;
            app.AddtotemplateEditField.Layout.Column = 4;
            app.AddtotemplateEditField.Value = 0.8;

            % Create MainchanelnumberSpinnerLabel
            app.MainchanelnumberSpinnerLabel = uilabel(app.GridLayout2_2);
            app.MainchanelnumberSpinnerLabel.HorizontalAlignment = 'right';
            app.MainchanelnumberSpinnerLabel.Layout.Row = 2;
            app.MainchanelnumberSpinnerLabel.Layout.Column = [2 3];
            app.MainchanelnumberSpinnerLabel.Text = 'Main chanel number';

            % Create MainchannelnumberSpinner
            app.MainchannelnumberSpinner = uispinner(app.GridLayout2_2);
            app.MainchannelnumberSpinner.Limits = [1 4.1];
            app.MainchannelnumberSpinner.Layout.Row = 2;
            app.MainchannelnumberSpinner.Layout.Column = 4;
            app.MainchannelnumberSpinner.Value = 1;

            % Create SpikeamplituderangeuVLabel
            app.SpikeamplituderangeuVLabel = uilabel(app.GridLayout2_2);
            app.SpikeamplituderangeuVLabel.HorizontalAlignment = 'right';
            app.SpikeamplituderangeuVLabel.Layout.Row = 3;
            app.SpikeamplituderangeuVLabel.Layout.Column = [2 3];
            app.SpikeamplituderangeuVLabel.Text = 'Spike amplitude range (uV)';

            % Create Ampthreshold1EditField
            app.Ampthreshold1EditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.Ampthreshold1EditField.Layout.Row = 3;
            app.Ampthreshold1EditField.Layout.Column = 5;
            app.Ampthreshold1EditField.Value = -Inf;

            % Create SpikewidtheithersideofpeakmsLabel
            app.SpikewidtheithersideofpeakmsLabel = uilabel(app.GridLayout2_2);
            app.SpikewidtheithersideofpeakmsLabel.HorizontalAlignment = 'right';
            app.SpikewidtheithersideofpeakmsLabel.Layout.Row = 4;
            app.SpikewidtheithersideofpeakmsLabel.Layout.Column = [2 3];
            app.SpikewidtheithersideofpeakmsLabel.Text = 'Spike width either side of peak (ms)';

            % Create SpikewidthEditField
            app.SpikewidthEditField = uieditfield(app.GridLayout2_2, 'numeric');
            app.SpikewidthEditField.Layout.Row = 4;
            app.SpikewidthEditField.Layout.Column = 4;
            app.SpikewidthEditField.Value = 0.67;

            % Create FilteringTab
            app.FilteringTab = uitab(app.TabGroup);
            app.FilteringTab.Title = 'Filtering';

            % Create GridLayout
            app.GridLayout = uigridlayout(app.FilteringTab);
            app.GridLayout.ColumnWidth = {'0.1x', '0.5x', '0.5x', '0.5x', '0.5x', '0.5x', '0.1x'};
            app.GridLayout.RowHeight = {'1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x', '1x'};
            app.GridLayout.ColumnSpacing = 2;
            app.GridLayout.RowSpacing = 2;

            % Create UIAxes
            app.UIAxes = uiaxes(app.GridLayout);
            ylabel(app.UIAxes, 'Hz')
            app.UIAxes.Layout.Row = [9 12];
            app.UIAxes.Layout.Column = [2 6];

            % Create FilterorderLabel
            app.FilterorderLabel = uilabel(app.GridLayout);
            app.FilterorderLabel.HorizontalAlignment = 'right';
            app.FilterorderLabel.Layout.Row = 5;
            app.FilterorderLabel.Layout.Column = 2;
            app.FilterorderLabel.Text = 'Filter order';

            % Create FilterLengthEditField
            app.FilterLengthEditField = uieditfield(app.GridLayout, 'numeric');
            app.FilterLengthEditField.Layout.Row = 5;
            app.FilterLengthEditField.Layout.Column = 3;
            app.FilterLengthEditField.Value = 400;

            % Create PresetsLabel
            app.PresetsLabel = uilabel(app.GridLayout);
            app.PresetsLabel.HorizontalAlignment = 'center';
            app.PresetsLabel.FontWeight = 'bold';
            app.PresetsLabel.Layout.Row = 1;
            app.PresetsLabel.Layout.Column = [2 6];
            app.PresetsLabel.Text = 'Presets';

            % Create HighpassButton
            app.HighpassButton = uibutton(app.GridLayout, 'state');
            app.HighpassButton.Text = 'Highpass';
            app.HighpassButton.Layout.Row = 2;
            app.HighpassButton.Layout.Column = 4;

            % Create BandpassButton
            app.BandpassButton = uibutton(app.GridLayout, 'state');
            app.BandpassButton.Text = 'Bandpass';
            app.BandpassButton.Layout.Row = 2;
            app.BandpassButton.Layout.Column = 5;

            % Create NotchButton
            app.NotchButton = uibutton(app.GridLayout, 'state');
            app.NotchButton.Text = 'Notch';
            app.NotchButton.Layout.Row = 2;
            app.NotchButton.Layout.Column = 6;

            % Create CutoffsHzEditFieldLabel
            app.CutoffsHzEditFieldLabel = uilabel(app.GridLayout);
            app.CutoffsHzEditFieldLabel.HorizontalAlignment = 'right';
            app.CutoffsHzEditFieldLabel.Layout.Row = 6;
            app.CutoffsHzEditFieldLabel.Layout.Column = 2;
            app.CutoffsHzEditFieldLabel.Text = 'Cutoffs (Hz)';

            % Create CutoffsEditField
            app.CutoffsEditField = uieditfield(app.GridLayout, 'text');
            app.CutoffsEditField.ValueChangedFcn = createCallbackFcn(app, @CutoffsEditFieldValueChanged, true);
            app.CutoffsEditField.Layout.Row = 6;
            app.CutoffsEditField.Layout.Column = [3 4];
            app.CutoffsEditField.Value = '[300,15000]';

            % Create CustomLabel
            app.CustomLabel = uilabel(app.GridLayout);
            app.CustomLabel.HorizontalAlignment = 'center';
            app.CustomLabel.FontWeight = 'bold';
            app.CustomLabel.Layout.Row = 4;
            app.CustomLabel.Layout.Column = [2 6];
            app.CustomLabel.Text = 'Custom';

            % Create HelpLabel
            app.HelpLabel = uilabel(app.GridLayout);
            app.HelpLabel.VerticalAlignment = 'top';
            app.HelpLabel.Layout.Row = [7 8];
            app.HelpLabel.Layout.Column = [2 6];
            app.HelpLabel.Text = {'For "Cutoffs (Hz)" specs Wn = [W1 W2 W3 W4 W5 ... WN], create a multiband filter with'; 'bands 0 < W < W1, W1 < W < W2, ..., WN < W < inf'; '"First band pass/stop" decides whether or not the first band is passband or stopband'};

            % Create FirstbandCheckBox
            app.FirstbandCheckBox = uicheckbox(app.GridLayout);
            app.FirstbandCheckBox.Text = 'First band mode: pass (on) / stop (off)';
            app.FirstbandCheckBox.Layout.Row = 5;
            app.FirstbandCheckBox.Layout.Column = [4 6];

            % Create CutoffsHzEditFieldLabel_2
            app.CutoffsHzEditFieldLabel_2 = uilabel(app.GridLayout);
            app.CutoffsHzEditFieldLabel_2.HorizontalAlignment = 'right';
            app.CutoffsHzEditFieldLabel_2.Layout.Row = 3;
            app.CutoffsHzEditFieldLabel_2.Layout.Column = 2;
            app.CutoffsHzEditFieldLabel_2.Text = 'Cutoffs (Hz)';

            % Create Cutoffs1EditField
            app.Cutoffs1EditField = uieditfield(app.GridLayout, 'numeric');
            app.Cutoffs1EditField.Layout.Row = 3;
            app.Cutoffs1EditField.Layout.Column = 3;
            app.Cutoffs1EditField.Value = 300;

            % Create Cutoffs2EditField
            app.Cutoffs2EditField = uieditfield(app.GridLayout, 'numeric');
            app.Cutoffs2EditField.Layout.Row = 3;
            app.Cutoffs2EditField.Layout.Column = 4;
            app.Cutoffs2EditField.Value = 15000;

            % Create SetButton
            app.SetButton = uibutton(app.GridLayout, 'push');
            app.SetButton.ButtonPushedFcn = createCallbackFcn(app, @SetButtonPushed, true);
            app.SetButton.BackgroundColor = [0.651 0.651 0.651];
            app.SetButton.Layout.Row = 3;
            app.SetButton.Layout.Column = [5 6];
            app.SetButton.Text = 'Set!';

            % Create LowpassButton
            app.LowpassButton = uibutton(app.GridLayout, 'state');
            app.LowpassButton.Text = 'Lowpass';
            app.LowpassButton.Layout.Row = 2;
            app.LowpassButton.Layout.Column = 3;

            % Create PlotButton
            app.PlotButton = uibutton(app.GridLayout, 'push');
            app.PlotButton.ButtonPushedFcn = createCallbackFcn(app, @PlotButtonPushed, true);
            app.PlotButton.BackgroundColor = [0.651 0.651 0.651];
            app.PlotButton.Layout.Row = 6;
            app.PlotButton.Layout.Column = [5 6];
            app.PlotButton.Text = 'Plot!';

            % Create NoneButton
            app.NoneButton = uibutton(app.GridLayout, 'state');
            app.NoneButton.Text = 'None';
            app.NoneButton.Layout.Row = 2;
            app.NoneButton.Layout.Column = 2;

            % Create InitialiseButton
            app.InitialiseButton = uibutton(app.SortinginitialiserUIFigure, 'push');
            app.InitialiseButton.ButtonPushedFcn = createCallbackFcn(app, @OKButtonPushed, true);
            app.InitialiseButton.Position = [231 19 93.7037037037037 25.25];
            app.InitialiseButton.Text = 'Initialise';

            % Show the figure after all components are created
            app.SortinginitialiserUIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = initialisePopup(varargin)

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.SortinginitialiserUIFigure)

            % Execute the startup function
            runStartupFcn(app, @(app)startupFcn(app, varargin{:}))

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.SortinginitialiserUIFigure)
        end
    end
end]]></w:t></w:r></w:p></w:body></w:document>