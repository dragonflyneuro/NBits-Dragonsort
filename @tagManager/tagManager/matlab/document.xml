<?xml version="1.0" encoding="UTF-8" standalone="no" ?><w:document xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main"><w:body><w:p><w:pPr><w:pStyle w:val="code"/></w:pPr><w:r><w:t><![CDATA[classdef tagManager < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        TagManagerUIFigure  matlab.ui.Figure
        GridLayout          matlab.ui.container.GridLayout
        RemovetagButton     matlab.ui.control.Button
        AddtagButton        matlab.ui.control.Button
        CancelButton        matlab.ui.control.Button
        ConfirmButton       matlab.ui.control.Button
        TagmanagementLabel  matlab.ui.control.Label
        UITable             matlab.ui.control.Table
    end

    
    properties (Access = private)
        CallingApp
        p
        uA
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app, mainapp, input)
            app.CallingApp = mainapp;
            app.uA = input;
            
            col = app.CallingApp.TagDropDown.Items;
            allBool = [];
            for ii = 1:length(col)
                bool = app.uA.tagcmpi(col{ii});
                allBool = cat(1,allBool,bool);
            end
            app.p = array2table(logical(allBool'));
            app.p.Properties.VariableNames = col;
            app.p.Properties.RowNames = "u"+string(1:length(input));
            
            app.UITable.Data = app.p;
            app.UITable.ColumnEditable = true;
            app.UITable.ColumnName = app.p.Properties.VariableNames;
            app.UITable.RowName = app.p.Row;
            
            if length(app.p.Properties.VariableNames) == 1
                app.RemovetagButton.Enable = 0;
            end
        end

        % Button pushed function: AddtagButton
        function AddtagButtonPushed(app, event)
            newTag = inputdlg("Enter name of new tag:","New Tag");
            if isempty(newTag)
                return;
            end
            if any(strcmpi(newTag, app.p.Properties.VariableNames))
                return;
            end
            app.p = [app.p, num2cell(false(size(app.p,1),1))];
            app.p.Properties.VariableNames(end) = newTag;
            app.UITable.ColumnName = app.p.Properties.VariableNames;
            app.CallingApp.TagDropDown.Items = app.p.Properties.VariableNames;
            app.UITable.Data = app.p;
            app.RemovetagButton.Enable = 1;
        end

        % Callback function: CancelButton, TagManagerUIFigure
        function UIFigureCloseRequest(app, event)
            switchButtons(app.CallingApp,1);
            switchButtons(app.CallingApp,3);
            app.CallingApp.StatusLabel.Value = "Ready";
            delete(app)
        end

        % Button pushed function: RemovetagButton
        function RemovetagButtonPushed(app, event)
            [idx,~] = listdlg('PromptString','Select a tag to remove','SelectionMode','single','ListString',app.p.Properties.VariableNames(2:end));
            if ~isempty(idx)
                app.p(:,idx+1) = [];
            end
            app.UITable.Data = app.p;
            app.CallingApp.TagDropDown.Items = app.p.Properties.VariableNames;
            drawnow
            if length(app.p.Properties.VariableNames) == 1
                app.RemovetagButton.Enable = 0;
            end
        end

        % Cell edit callback: UITable
        function UITableCellEdit(app, event)
            app.p = app.UITable.Data;
        end

        % Button pushed function: ConfirmButton
        function ConfirmButtonPushed(app, event)
%             updateTags(app.CallingApp, app.p);
            for ii = 1:length(app.uA)
                app.uA(ii).tags = string(app.p.Properties.VariableNames(table2array(app.p(ii,:))));
            end
            switchButtons(app.CallingApp,1);
            switchButtons(app.CallingApp,3);
            delete(app)
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create TagManagerUIFigure and hide until all components are created
            app.TagManagerUIFigure = uifigure('Visible', 'off');
            app.TagManagerUIFigure.Position = [100 100 640 480];
            app.TagManagerUIFigure.Name = 'Tag Manager';
            app.TagManagerUIFigure.CloseRequestFcn = createCallbackFcn(app, @UIFigureCloseRequest, true);

            % Create GridLayout
            app.GridLayout = uigridlayout(app.TagManagerUIFigure);
            app.GridLayout.ColumnWidth = {'1x', '1x', '1x', '1x'};
            app.GridLayout.RowHeight = {20, '1x', 20};

            % Create UITable
            app.UITable = uitable(app.GridLayout);
            app.UITable.ColumnName = {'Tag'};
            app.UITable.RowName = {};
            app.UITable.CellEditCallback = createCallbackFcn(app, @UITableCellEdit, true);
            app.UITable.Layout.Row = 2;
            app.UITable.Layout.Column = [1 4];

            % Create TagmanagementLabel
            app.TagmanagementLabel = uilabel(app.GridLayout);
            app.TagmanagementLabel.HorizontalAlignment = 'center';
            app.TagmanagementLabel.FontWeight = 'bold';
            app.TagmanagementLabel.Layout.Row = 1;
            app.TagmanagementLabel.Layout.Column = [2 3];
            app.TagmanagementLabel.Text = 'Tag management';

            % Create ConfirmButton
            app.ConfirmButton = uibutton(app.GridLayout, 'push');
            app.ConfirmButton.ButtonPushedFcn = createCallbackFcn(app, @ConfirmButtonPushed, true);
            app.ConfirmButton.Layout.Row = 3;
            app.ConfirmButton.Layout.Column = 3;
            app.ConfirmButton.Text = 'Confirm';

            % Create CancelButton
            app.CancelButton = uibutton(app.GridLayout, 'push');
            app.CancelButton.ButtonPushedFcn = createCallbackFcn(app, @UIFigureCloseRequest, true);
            app.CancelButton.Layout.Row = 3;
            app.CancelButton.Layout.Column = 4;
            app.CancelButton.Text = 'Cancel';

            % Create AddtagButton
            app.AddtagButton = uibutton(app.GridLayout, 'push');
            app.AddtagButton.ButtonPushedFcn = createCallbackFcn(app, @AddtagButtonPushed, true);
            app.AddtagButton.Layout.Row = 3;
            app.AddtagButton.Layout.Column = 1;
            app.AddtagButton.Text = 'Add tag';

            % Create RemovetagButton
            app.RemovetagButton = uibutton(app.GridLayout, 'push');
            app.RemovetagButton.ButtonPushedFcn = createCallbackFcn(app, @RemovetagButtonPushed, true);
            app.RemovetagButton.Layout.Row = 3;
            app.RemovetagButton.Layout.Column = 2;
            app.RemovetagButton.Text = 'Remove tag';

            % Show the figure after all components are created
            app.TagManagerUIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = tagManager(varargin)

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.TagManagerUIFigure)

            % Execute the startup function
            runStartupFcn(app, @(app)startupFcn(app, varargin{:}))

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.TagManagerUIFigure)
        end
    end
end]]></w:t></w:r></w:p></w:body></w:document>